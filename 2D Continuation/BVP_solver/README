The function main_BVP_solver.m uses a shooting method to solve the boundary value problem
for the following system:
x1' = sin(x3)   x2' = cos(x3)   x3' = p3
p1' = 0   p2' = 0   p3' = p1*sin(x3) - p2*cos(x3)
Function Outputs:
   output.t : nx1 vector of time values t along solution
   output.x : nx3 vector containing the solution for x(t) 
              (e.g., output.x(:,2) is the solution for x2(t))
   output.p : nx3 vector containing the solution for p(t)
   output.M : 3x3xn matrix containing Jacobian of p(t) with respect to p(0)
              (e.g., output.M(:,:,10) is the Jacobian of output.p(10,:)
              with respect to a change in output.p(1,:))
   output.J : Jacobian of x(t) with respect to p(0)
   output.eta : error vector between desired value of x(1) and the
                computed value of x(1)
   output.err : norm of output.eta
   output.p0 : initial condition p(0) found by BVP solver


Run "output = main_BVP_solver" in the Matlab command window to execute the code.
As the BVP problem is solve, the code plots the x1 vs. x2 trajectory for the current solution.